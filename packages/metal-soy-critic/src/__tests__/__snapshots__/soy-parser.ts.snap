// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Soy Parser should parse deltemplates 1`] = `
Object {
  "body": Array [
    Object {
      "body": Array [
        Object {
          "content": "$title",
          "type": "Interpolation",
        },
        Object {
          "content": "$name",
          "type": "Interpolation",
        },
        Object {
          "body": Array [
            Object {
              "content": "$optionalInfo",
              "type": "Interpolation",
            },
          ],
          "type": "If",
        },
        Object {
          "body": Array [],
          "name": "helper",
          "namespace": null,
          "type": "Call",
        },
        Object {
          "body": Array [
            Object {
              "body": Array [],
              "name": "foo",
              "type": "Param",
            },
          ],
          "name": "render",
          "namespace": "OtherComponent",
          "type": "Call",
        },
      ],
      "name": "First",
      "namespace": "Test",
      "params": Array [
        Object {
          "name": "name",
          "paramType": "string",
          "required": true,
          "type": "ParamDeclaration",
        },
        Object {
          "name": "title",
          "paramType": "string",
          "required": true,
          "type": "ParamDeclaration",
        },
        Object {
          "name": "optionalInfo",
          "paramType": "string",
          "required": false,
          "type": "ParamDeclaration",
        },
      ],
      "type": "DelTemplate",
      "variant": null,
    },
    Object {
      "body": Array [
        Object {
          "content": "$title",
          "type": "Interpolation",
        },
        Object {
          "content": "$name",
          "type": "Interpolation",
        },
        Object {
          "body": Array [
            Object {
              "content": "$optionalInfo",
              "type": "Interpolation",
            },
          ],
          "type": "If",
        },
        Object {
          "body": Array [],
          "name": "helper",
          "namespace": null,
          "type": "Call",
        },
        Object {
          "body": Array [
            Object {
              "body": Array [],
              "name": "foo",
              "type": "Param",
            },
          ],
          "name": "render",
          "namespace": "OtherComponent",
          "type": "Call",
        },
      ],
      "name": "Second",
      "namespace": "Othernamespace",
      "params": Array [
        Object {
          "name": "name",
          "paramType": "string",
          "required": true,
          "type": "ParamDeclaration",
        },
        Object {
          "name": "title",
          "paramType": "string",
          "required": true,
          "type": "ParamDeclaration",
        },
        Object {
          "name": "optionalInfo",
          "paramType": "string",
          "required": false,
          "type": "ParamDeclaration",
        },
      ],
      "type": "DelTemplate",
      "variant": Object {
        "content": "'neato'",
        "type": "Interpolation",
      },
    },
  ],
  "namespace": "Test",
  "type": "Program",
}
`;

exports[`Soy Parser should parse file correctly 1`] = `
Object {
  "body": Array [
    Object {
      "body": Array [
        Object {
          "content": "$title",
          "type": "Interpolation",
        },
        Object {
          "content": "$name",
          "type": "Interpolation",
        },
        Object {
          "body": Array [
            Object {
              "content": "$optionalInfo",
              "type": "Interpolation",
            },
          ],
          "type": "If",
        },
        Object {
          "body": Array [],
          "name": "helper",
          "namespace": null,
          "type": "Call",
        },
        Object {
          "body": Array [
            Object {
              "body": Array [],
              "name": "foo",
              "type": "Param",
            },
          ],
          "name": "render",
          "namespace": "OtherComponent",
          "type": "Call",
        },
      ],
      "name": "render",
      "namespace": null,
      "params": Array [
        Object {
          "name": "name",
          "paramType": "string",
          "required": true,
          "type": "ParamDeclaration",
        },
        Object {
          "name": "title",
          "paramType": "string",
          "required": true,
          "type": "ParamDeclaration",
        },
        Object {
          "name": "optionalInfo",
          "paramType": "string",
          "required": false,
          "type": "ParamDeclaration",
        },
      ],
      "private": false,
      "type": "Template",
    },
    Object {
      "body": Array [],
      "name": "helper",
      "namespace": null,
      "params": Array [
        Object {
          "name": "test",
          "paramType": "asdasd",
          "required": false,
          "type": "ParamDeclaration",
        },
      ],
      "private": false,
      "type": "Template",
    },
  ],
  "namespace": "Test",
  "type": "Program",
}
`;

exports[`Soy Parser should parse nested calls 1`] = `
Object {
  "body": Array [
    Object {
      "body": Array [
        Object {
          "content": "$title",
          "type": "Interpolation",
        },
        Object {
          "content": "$name",
          "type": "Interpolation",
        },
        Object {
          "body": Array [
            Object {
              "content": "$optionalInfo",
              "type": "Interpolation",
            },
          ],
          "type": "If",
        },
        Object {
          "body": Array [
            Object {
              "content": "$name",
              "type": "Interpolation",
            },
            Object {
              "content": "$title",
              "type": "Interpolation",
            },
          ],
          "type": "If",
        },
        Object {
          "body": Array [
            Object {
              "body": Array [],
              "name": "foo",
              "type": "Param",
            },
            Object {
              "body": Array [
                Object {
                  "body": Array [],
                  "name": "helper",
                  "namespace": null,
                  "type": "Call",
                },
                Object {
                  "body": Array [],
                  "name": "helper",
                  "namespace": null,
                  "type": "Call",
                },
              ],
              "name": "content",
              "type": "Param",
            },
          ],
          "name": "render",
          "namespace": "OtherComponent",
          "type": "Call",
        },
        Object {
          "body": Array [],
          "name": "helper",
          "namespace": null,
          "type": "Call",
        },
      ],
      "name": "render",
      "namespace": null,
      "params": Array [
        Object {
          "name": "name",
          "paramType": "string",
          "required": true,
          "type": "ParamDeclaration",
        },
        Object {
          "name": "title",
          "paramType": "string",
          "required": true,
          "type": "ParamDeclaration",
        },
        Object {
          "name": "optionalInfo",
          "paramType": "string",
          "required": false,
          "type": "ParamDeclaration",
        },
      ],
      "private": false,
      "type": "Template",
    },
    Object {
      "body": Array [],
      "name": "helper",
      "namespace": null,
      "params": Array [
        Object {
          "name": "test",
          "paramType": "asdasd",
          "required": false,
          "type": "ParamDeclaration",
        },
      ],
      "private": false,
      "type": "Template",
    },
  ],
  "namespace": "Test",
  "type": "Program",
}
`;

exports[`Soy Parser should parse param declarations 1`] = `
Object {
  "body": Array [
    Object {
      "body": Array [
        Object {
          "body": Array [
            Object {
              "content": "$title",
              "type": "Interpolation",
            },
          ],
          "type": "Foreach",
        },
        Object {
          "content": "$name",
          "type": "Interpolation",
        },
        Object {
          "body": Array [
            Object {
              "content": "$optionalInfo",
              "type": "Interpolation",
            },
          ],
          "type": "If",
        },
      ],
      "name": "render",
      "namespace": null,
      "params": Array [
        Object {
          "name": "name",
          "paramType": "string",
          "required": true,
          "type": "ParamDeclaration",
        },
        Object {
          "name": "titles",
          "paramType": "list<string>",
          "required": true,
          "type": "ParamDeclaration",
        },
        Object {
          "name": "optionalInfo",
          "paramType": "html|string",
          "required": false,
          "type": "ParamDeclaration",
        },
      ],
      "private": false,
      "type": "Template",
    },
  ],
  "namespace": "Test",
  "type": "Program",
}
`;

exports[`Soy Parser should parse param names with underscores 1`] = `
Object {
  "body": Array [
    Object {
      "body": Array [
        Object {
          "content": "$_name",
          "type": "Interpolation",
        },
      ],
      "name": "render",
      "namespace": null,
      "params": Array [
        Object {
          "name": "_name",
          "paramType": "string",
          "required": false,
          "type": "ParamDeclaration",
        },
      ],
      "private": false,
      "type": "Template",
    },
  ],
  "namespace": "UnderscoreParam",
  "type": "Program",
}
`;

exports[`Soy Parser should parse private templates 1`] = `
Object {
  "body": Array [
    Object {
      "body": Array [
        Object {
          "content": "$title",
          "type": "Interpolation",
        },
        Object {
          "content": "$name",
          "type": "Interpolation",
        },
        Object {
          "body": Array [],
          "name": "helper",
          "namespace": null,
          "type": "Call",
        },
      ],
      "name": "render",
      "namespace": null,
      "params": Array [
        Object {
          "name": "name",
          "paramType": "string",
          "required": true,
          "type": "ParamDeclaration",
        },
        Object {
          "name": "title",
          "paramType": "string",
          "required": true,
          "type": "ParamDeclaration",
        },
      ],
      "private": false,
      "type": "Template",
    },
    Object {
      "body": Array [
        Object {
          "content": "$test ?: ''",
          "type": "Interpolation",
        },
      ],
      "name": "helper",
      "namespace": null,
      "params": Array [
        Object {
          "name": "test",
          "paramType": "asdasd",
          "required": false,
          "type": "ParamDeclaration",
        },
      ],
      "private": true,
      "type": "Template",
    },
  ],
  "namespace": "Test",
  "type": "Program",
}
`;
